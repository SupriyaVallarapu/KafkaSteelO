#working correctly
import json
from flask import Flask, Response, jsonify
from confluent_kafka import Consumer, TopicPartition

app = Flask(__name__)

def consume_messages_all(consumer_config, topic, partition, n):
    consumer = Consumer(consumer_config)
    consumer.assign([TopicPartition(topic, partition)])

    messages = []
    message_count = 0

    try:
        while True:
            msg = consumer.poll(1.0)
            if msg is None:
                continue
            if msg.error():
                print("Error: {}".format(msg.error()))
                continue

            message = msg.value().decode('utf-8')
            messages.append(message)
            message_count += 1

            if n is not None and message_count >= n:
                break

    except KeyboardInterrupt:
        pass

    finally:
        consumer.close()

    return messages

@app.route('/get/<int:n>/<offset>/<topic>/<int:num_partitions>/<group_id>', methods=['GET'])
def get_n_messages(n, offset, topic, num_partitions, group_id):
    consumer_config = {
        'bootstrap.servers': 'localhost:9092',
        'group.id': group_id,
        'auto.offset.reset': offset
    }

    messages = []
    for partition in range(num_partitions):
        partition_messages = consume_messages_all(consumer_config, topic, partition, n)
        messages.extend(partition_messages)

    json_data = json.dumps(messages)
    return Response(json_data, mimetype='application/json')

if __name__ == '__main__':
    offset = input("Enter offset (earliest or latest): ")
    topic = input("Enter topic: ")
    group_id = input("Enter group ID: ")
    num_partitions = int(input("Enter the number of partitions: "))
    app.run(port=3002)
